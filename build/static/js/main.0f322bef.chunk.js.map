{"version":3,"sources":["utils/wallet.js","components/Navbar.js","utils/tezos.js","utils/operation.js","utils/tzkt.js","App.js","index.js"],"names":["wallet","BeaconWallet","name","preferredNetwork","connectWallet","requestPermissions","network","type","getAccount","client","getActiveAccount","activeAccount","address","Navbar","useState","account","setAccount","useEffect","onConnectWallet","className","href","onClick","tezos","TezosToolkit","setWalletProvider","buyTicketOperation","at","contractInstance","methods","buy_ticket","send","amount","mutez","op","confirmation","endGameOperation","end_game","fetchStorage","axios","get","res","data","App","players","setPlayers","tickets","setTickets","loading","setLoading","storage","Object","values","tickets_available","onBuyTicket","alert","message","onEndGame","map","player","index","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0f322bef.chunk.js","sourcesContent":["// TODO 2.a - Setup beacon wallet instance\r\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\r\n\r\nexport const wallet = new BeaconWallet({\r\n  name: \"Tezos Lottery Dapp\",\r\n  preferredNetwork: \"ghostnet\",\r\n});\r\n\r\n// TODO 2.b - Setup connectWallet function (on ghostnet)\r\nexport const connectWallet = async () => {\r\n  await wallet.requestPermissions({ network: { type: \"ghostnet\" } });\r\n};\r\n\r\n// TODO 2.c - Setup getAccount function\r\nexport const getAccount = async () => {\r\n  const activeAccount = await wallet.client.getActiveAccount();\r\n  if (activeAccount) {\r\n    return activeAccount.address;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { connectWallet, getAccount } from \"../utils/wallet\";\r\nimport \"./Navbar.css\"\r\n\r\nconst Navbar = () => {\r\n  const [account, setAccount] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      // TODO 5.b - Get the active account\r\n      const account = await getAccount();\r\n      setAccount(account);\r\n    })();\r\n  }, []);\r\n\r\n  // TODO 4.a - Create onConnectWallet function\r\n  const onConnectWallet = async () => {\r\n    await connectWallet();\r\n    const account = await getAccount();\r\n    setAccount(account);\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"logo\">\r\n         .\r\n      </div>\r\n      <div className=\"container\">\r\n        <a href=\"https://smartpy.io/explorer?address=KT1XCMYEw6BD73cz3BNhVKZCdjEhLgYdyY2q\" className=\"navbar\">\r\n          Tezos Lottery\r\n        </a>\r\n      </div>\r\n        <div className=\"acc\">\r\n          {/* TODO 4.b - Call connectWallet function onClick  */}\r\n          <button onClick={onConnectWallet} className=\"btn3\">\r\n            {/* TODO 5.a - Show account address if wallet is connected */}\r\n            {account !== \"\" ? account : \"Connect Wallet\"}\r\n          </button>\r\n        </div>\r\n          \r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","// TODO 1 - Setup Tezos toolkit\r\nimport { TezosToolkit } from \"@taquito/taquito\";\r\nimport { wallet } from \"./wallet\";\r\n\r\nexport const tezos = new TezosToolkit(\"https://ghostnet.ecadinfra.com\");\r\n\r\n// TODO 3 - Specify wallet provider for Tezos instance\r\ntezos.setWalletProvider(wallet);\r\n","// TODO 6 - Call buy_ticket entrypoint in the Lottery contract\r\nimport { tezos } from \"./tezos\";\r\n\r\nexport const buyTicketOperation = async () => {\r\n  try {\r\n    const contractInstance = await tezos.wallet.at(\"KT1XCMYEw6BD73cz3BNhVKZCdjEhLgYdyY2q\");\r\n    const op = await contractInstance.methods.buy_ticket().send({\r\n      amount: 1,\r\n      mutez: false,\r\n    });\r\n    await op.confirmation(1);\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\n// TODO 10 - Call end_game entrypoint in the Lottery contract\r\nexport const endGameOperation = async () => {\r\n  try {\r\n    const contractInstance = await tezos.wallet.at(\"KT1XCMYEw6BD73cz3BNhVKZCdjEhLgYdyY2q\");\r\n    const op = await contractInstance.methods.end_game().send();\r\n    await op.confirmation(1);\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n","// TODO 8 - Fetch lottery contract storage\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const fetchStorage = async () => {\r\n  try{\r\n  const res = await axios.get(\r\n    \"https://api.ghostnet.tzkt.io/v1/contracts/KT1XCMYEw6BD73cz3BNhVKZCdjEhLgYdyY2q/storage\"\r\n  );\r\n  return res.data;\r\n  }catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport Navbar from \"./components/Navbar\";\r\nimport \"./App.css\";\r\nimport { buyTicketOperation, endGameOperation } from \"./utils/operation\";\r\nimport { fetchStorage } from \"./utils/tzkt\";\r\n\r\nconst App = () => {\r\n  // Players holding lottery tickets\r\n  const [players, setPlayers] = useState([]);\r\n  const [tickets, setTickets] = useState(5);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Set players and tickets remaining\r\n  useEffect(() => {\r\n    // TODO 9 - Fetch players and tickets remaining from storage\r\n    (async () => {\r\n      const storage = await fetchStorage();\r\n      setPlayers(Object.values(storage.players));\r\n      setTickets(storage.tickets_available);\r\n    })();\r\n  }, []);\r\n\r\n  // TODO 7.a - Create onBuyTicket\r\n  const onBuyTicket = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await buyTicketOperation();\r\n      alert(\"Transaction succesful!\");\r\n    } catch (err) {\r\n      alert(\"Transaction Failed:\", err.message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // TODO 11.a - Create onEndGame\r\n  const onEndGame = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await endGameOperation();\r\n      alert(\"Transaction succesful!\");\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Navbar />\r\n      <div className=\"ana\">\r\n      <div className=\"Ana1\">.</div>\r\n        <div className=\"tic1\">\r\n          {/* Ticket remaining display */}\r\n          <div className=\"py-1\">Tickets remaining: {tickets}</div>\r\n          {/* Action Buttons */}\r\n          {tickets > 0 ? (\r\n            <button onClick={onBuyTicket} className=\"btn1\">\r\n              {/* TODO 7.b - Call onBuyTicket on click */}\r\n              {/* TODO 7.c - Show \"loading...\" when buying operation is pending */}\r\n              <span> {loading === true ? \"Loading...\" : \"Buy Ticket\"}</span>\r\n              <i></i>\r\n            </button>\r\n          ) : (\r\n            <button onClick={onEndGame} className=\"btn1\">\r\n              {/* TODO 11.b - Call onEndGame on click */}\r\n              {/* TODO 11.c - Show \"loading...\" when buying operation is pending */}\r\n              <span> {loading ? \"Loading...\" : \"End Game\"}</span>\r\n              <i></i>\r\n            </button>\r\n          )}\r\n          {/* List of Players */}\r\n          <div className=\"player\">\r\n            <div className=\"ticket\">.</div>\r\n            <div className=\"play\">\r\n              {players.map((player, index) => (\r\n                <div key={index}>\r\n                  <b>Ticket {index + 1}:</b> {player}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"Ana2\">.</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\n\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}